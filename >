## n>
# 将输出从文件描述符 n 重定向到文件。
#
# 数字 n 被称作文件描述符 (File Descriptor)。文件描述符与一个具体的文件相关联，它的作用就是给相应的文件操作函数提供一个目标即操作哪个文件。在 POSIX 标准中，文件描述符都是一个数字，并且有三个特殊的文件描述符他们是:
#
# 0，Standard Input，stdin 中文名称是标准输入
# 1，Standard Output，stdout 中文名称是标准输出
# 2，Standard Error，stderr 中文名称是标准错误输出
#
# - 当采用 > 符号，你必须具有该文件的写权限。如果该文件不存在，将创建它。如果该文件已经存在，通常将覆盖所有现有内容，并且没有任何警告。
# - 当采用 >> 符号，功能跟 > 类似，但新的内容会追加在目标文件的尾部。
# - 当采用 < 符号，功能跟 > 类似，当输入流是在右侧。


# 将标准错误输出重定向到标准输出，所以错误和普通输出都输出到 file 文件中去
command 2>&1 >file

# 将标准输出和标准错误输出都输出到 file 文件中去
command &>file

# 将标准错误输出丢弃
command 2>/dev/null
# vim: set ft=sh
